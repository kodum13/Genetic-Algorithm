from random import randint
import pandas as pd
import numpy as np

###############################################################################
# Initialize sets
# Set number of parts as set I
num_parts = 10
I = range(1,num_parts+1)

# Set number of stores as set L
num_stores = 5
L = range(1,num_stores+1)

# Set the upper limits for stocking quantity at each store and DC
Sil_upper_list = [[3,4,5,4,3,2,6,4,2,3],
             [3,4,5,4,3,2,6,4,2,3],
             [3,4,5,4,3,2,6,4,2,3],
             [3,4,5,4,3,2,6,4,2,3],
             [3,4,5,4,3,2,6,4,2,3]]
Sil_upper = pd.DataFrame(Sil_upper_list, columns = ['1','2','3','4','5','6','7','8','9','10']) 
print("Upper limits on stocking parts at store: ", Sil_upper)

Si0_upper = [[6,8,10,8,6,4,12,8,4,6]]

###############################################################################

# Sets stocking level for each part at all stores
# Takes random integer between inclusive 0 and the upper limit
def stock_store():
    stock_level = pd.DataFrame(np.nan, index=[1,2,3,4,5], 
                           columns=['1','2','3','4','5','6','7','8','9','10'])
    for i in range(num_stores):
        for j in range(num_parts):
            stock_level.iloc[i,j] = randint(0,Sil_upper.iloc[i,j])
    return stock_level

stock_si = stock_store()

Sols = []
Demands = []
Wait_times = []
def solution_space():
    #dem = exp_demand(lambda_demand, 10)
    for i in range(100):
        new_sol = stock_store()
        Sols.append(new_sol)
    return Sols
        
S = solution_space()
